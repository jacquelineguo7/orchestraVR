#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["violin1_chair", "violin2_chair", "viola_chair", "cello_chair", "violin1_stand", "violin2_stand", "viola_stand", "cello_stand", "cello", "violin1", "violin2", "viola", "floor", "Timeline"]
    def "violin1_chair" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 1.5707963, 0)
        }
        references = @chair.usdz@
    )
    {
        quatf xformOp:orient = (0.7261819, 0, 0.6875026, 0)
        float3 xformOp:scale = (10, 10, 10)
        float3 xformOp:translate = (-39.991436, 0.0000041276217, 22.046799)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "violin2_chair" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0.5364655, 0)
        }
        references = @chair.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.9642408, 0, 0.26502782, 0)
        float3 xformOp:scale = (10, 10, 10)
        float3 xformOp:translate = (-30.691813, 6.556511e-7, 5.516757)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "viola_chair" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -0.42362347, 0)
        }
        references = @chair.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.97765166, 0, -0.21023148, 0)
        float3 xformOp:scale = (10, 10, 10)
        float3 xformOp:translate = (-7.8379397, 0, 5.035165)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "cello_chair" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -1.5707963, 0)
        }
        references = @chair.usdz@
    )
    {
        reorder nameChildren = ["Materials", "Geom"]
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.69481516, 0, -0.71918833, 0)
        float3 xformOp:scale = (10, 10, 10)
        float3 xformOp:translate = (1.2025406, 0.23475224, 23.05542)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "floor" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
    )
    {
        reorder nameChildren = ["MaplePlywood", "SmoothConcrete"]
        rel material:binding = </Root/floor/MaplePlywood> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        quatf xformOp:orient = (0.99999994, 0, 0, 0)
        float3 xformOp:scale = (1000, 0.9999998, 1000)
        float3 xformOp:translate = (-17.533398, 0.0000067949295, 14.684994)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "MaplePlywood" (
            active = true
            prepend references = @MaplePlywood.usdz@
        )
        {
        }
    }

    def "violin2_stand" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -1.8770683, 0)
        }
        references = @stand.usdz@
    )
    {
        quatf xformOp:orient = (0.590971, 0, -0.80669284, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (-24.35575, 0.0000019073486, 14.477324)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "viola_stand" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -2.7998683, 0)
        }
        references = @stand.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (-82.59266, 38.662422)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (-0.17003204, 0, 0.9854386, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (-12.007809, 2.3841858e-7, 15.221393)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "cello_stand" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -3.9768791, 0)
        }
        references = @stand.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (-62.59266, 58.662422)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (0.40560737, 0, 0.9140474, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (-8.661249, -7.1525574e-7, 24.184467)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "_2___Default"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex

                over "pbr_shader"
                {
                    color3f inputs:diffuseColor = (0.0118, 0.0118, 0.0118)
                }
            }
        }
    }

    def "cello" (
        active = true
        customData = {
            float3 rotationEulerHint = (-0.23455936, -1.5707963, 0)
        }
        references = @cello.usdz@
    )
    {
        quatf xformOp:orient = (0.7037714, 0.0829186, -0.70072407, 0.082559556)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-6.3943977, 9.075318, 22.269445)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "violin1" (
        active = true
        customData = {
            float3 rotationEulerHint = (0.19967653, -0.44961324, -0.087729156)
        }
        references = @violin.usdz@
    )
    {
        quatf xformOp:orient = (0.9700241, 0.08734461, -0.22585514, -0.020336838)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-37.012672, 10.934831, 19.922121)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "defaultMat"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }
    }

    def "violin2" (
        active = true
        customData = {
            float3 rotationEulerHint = (0.6464774, -1.2697116, -0.6244922)
        }
        references = @violin.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (-82.59266, 38.662422)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.78441274, 0.0706315, -0.6137214, -0.05526178)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-26.371685, 12.238133, 6.7924466)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "defaultMat"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }
    }

    def "viola" (
        active = true
        customData = {
            float3 rotationEulerHint = (-0.25223446, -2.3685532, 0.17806578)
        }
        references = @violin.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (-62.59266, 58.662422)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (0.38285068, 0.034473326, -0.9194468, -0.082790464)
        float3 xformOp:scale = (0.12, 0.12, 0.12)
        float3 xformOp:translate = (-5.315076, 12.217977, 6.903265)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "defaultMat"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }
    }

    def "violin1_stand" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -0.9620867, 0)
        }
        references = @stand.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (-82.59266, 38.662422)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.8865126, 0, -0.4627043, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (-28.756094, -2.9802322e-7, 23.635695)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        float3 xformOp:scale = (5, 5, 5)
        float3 xformOp:translate = (-6.9433165, 12.904079, 2.460967)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Sphere "Sphere_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere_1/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (5, 5, 5)
        float3 xformOp:translate = (3.6926727, 12.904079, 23.538227)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Sphere_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Sphere "Sphere_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere_2/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (5, 5, 5)
        float3 xformOp:translate = (-43.759148, 12.904079, 21.840372)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Sphere_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Sphere "Sphere_3" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere_3/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (60, 60)
        int ui:nodegraph:node:stackingOrder = 3
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (5, 5, 5)
        float3 xformOp:translate = (-32.41916, 12.904079, 3.3634615)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Sphere_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def RealityKitTimeline "Timeline"
    {
        def RealityKitTrack "Track"
        {
        }
    }
}

